To do:

1) Create smart contract for decentralised exchange of favours
   1) define favours - done
   2) use test eth as means of payment - done
   3) compile and test locally with Ganache - done
   4) make a wallet (e.g. metamask) necessary
      1) Detects the presence of MetaMask - done
      2) Connects to the current account - done
      3) Displays information from your smart contract - done
      4) Allows a user to submit a transaction to update smart contract state - done
      5) Updates the frontend if the transaction is successful or not - done
   5) // for the future: add user's current balance to website
   6) write 5 tests

2) define used security measures
   1) which files to list in .gitignore?
   2) 

3) create frontend (github page/ netlify/ fleek)
4) upload to testnet
   1) find out how to reset status of favours so one can buy them again
   2) test on testnet
   3) test sync with frontend
5) documentation before submission


for later:
- Rafikicoin
  - create ER20 token with openzeppelin standard
  - compile and test locally
  - deploy to testnet

- incorporate rafikicoin as means of payment/ reward to enter the payment system. 
- react front-end dev. (e.g. show user's current balance on website)

- user registration
  - user profile generation with basic information
  - profile validation

- add voting option to define price of favours
  - permitted users can define new use cass to be put for a vote on the price




{
    "id": 1,
    "name": "Empty dishwasher",
    "picture": "images/dishwasher.jpeg",
    "time": 5,
    "difficulty": "easy",
    "location": "Kitchen"
  },
  {
    "id": 2,
    "name": "Hang clothes",
    "picture": "images/hanger.jpeg",
    "time": 15,
    "difficulty": "medium",
    "location": "Where the colthes horse fits"
  },
  {
    "id": 3,
    "name": "Wash clothes",
    "picture": "images/washing-machine.jpeg",
    "time": 5,
    "difficulty": "easy",
    "location": "Bathroom"
  },
  {
    "id": 4,
    "name": "Vacuume clean",
    "picture": "images/vacuum-cleaner.jpeg",
    "time": 30,
    "difficulty": "easy",
    "location": "Flat"
  },
  {
    "id": 5,
    "name": "Empty dust bins",
    "picture": "images/dust-bin.jpeg",
    "time": 8,
    "difficulty": "easy",
    "location": "On the street"
  },
  {
    "id": 6,
    "name": "Wet mop the floor",
    "picture": "images/clean.jpeg",
    "time": 30,
    "difficulty": "medium",
    "location": "Flat"
  },
  {
    "id": 7,
    "name": "Clean toilet(s)",
    "picture": "images/clean.jpeg",
    "time": 10,
    "difficulty": "hard",
    "location": "toilet"
  },
  {
    "id": 8,
    "name": "Clean kitchen",
    "picture": "images/clean.jpeg",
    "time": 15,
    "difficulty": "medium",
    "location": "Kitchen"
  },
  {
    "id": 9,
    "name": "Fill dishwasher",
    "picture": "images/dishwasher.jpeg",
    "time": 10,
    "difficulty": "easy",
    "location": "Kitchen"
  },
  {
    "id": 10,
    "name": "Clean fridge",
    "picture": "images/clean.jpeg",
    "time": 20,
    "difficulty": "medium",
    "location": "Kitchen"
  }